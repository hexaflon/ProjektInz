@page
@model TestTest.Pages.Exam.AddQuestionModel

@{
    ViewData["Title"] = "Dodaj pytanie";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1 class="display-4">Dodaj pytanie</h1>

<table class="table">
    <tr class="text-muted border-orange">
        <td>
            Tytuł: <span class="text1">@Model.wysTest.Tytul</span>
        </td>
    </tr>
    @if (Model.wysTest.ListaPytan != null)
    {
        <tr class="text-muted">
            <td>
                Pytania dodane do testu:
            </td>
        </tr>
        foreach (var pyt in Model.wysTest.ListaPytan)
        {
            <tr class="text1">
                <td>
                    @Html.DisplayFor(x => pyt.IdPytanieNavigation.Tresc)
                </td>
                <td>
                        <a asp-page-handler="Delete" asp-route-idTest="@pyt.IdTest" asp-route-idPytanie="@pyt.IdPytanie" class="btn btn-delete">Usuń</a>
                </td>
            </tr>
        }
    }
</table>

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <form method="post" asp-route-id="@ViewBag.IdTest">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="ListaPytan.IdPytanie" class="control-label">Wybierz pytanie</label>
                    <select asp-for="ListaPytan.IdPytanie" class="form-control dropdown" asp-items="ViewBag.IdPytanie"></select>
                </div>
                <div class="form-group mt-3">
                    <input type="submit" value="Dodaj" class="btn btn-standard" />
                    <a class="btn btn-back ml-2" asp-page="List">Powrót</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}